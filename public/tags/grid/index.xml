<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grid | Fiona MacNeill Portfolio and Blog</title>
    <link>http://localhost:1313/tags/grid/</link>
      <atom:link href="http://localhost:1313/tags/grid/index.xml" rel="self" type="application/rss+xml" />
    <description>Grid</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-gb</language><lastBuildDate>Sun, 11 Dec 2016 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu4186623227307172452.png</url>
      <title>Grid</title>
      <link>http://localhost:1313/tags/grid/</link>
    </image>
    
    <item>
      <title>Cellular concerns</title>
      <link>http://localhost:1313/post/2016/12/cellular-concerns/</link>
      <pubDate>Sun, 11 Dec 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2016/12/cellular-concerns/</guid>
      <description>&lt;p&gt;I have been plugging away at the portfolio site with the primary aim of getting a semi-functional prototype version to Dr. Theo Fotis on Monday 12th of December. There is a still a huge amount of stuff to do, fix-up and streamline I will add these tasks to my Trello board. This journal entry provides a rundown of the decisions that I have this week.&lt;/p&gt;
&lt;h3 id=&#34;flickity-carousel&#34;&gt;Flickity carousel&lt;/h3&gt;
&lt;p&gt;I decided to make the &lt;em&gt;carousel-cell&lt;/em&gt; 100% width due to the need for a more immersive timeline. What I mean by this is that I felt that the cells were too modular before and the greater width (formerly 66%) makes more sense in terms of showing the long anxiety levels .svg file. I still have lot of work to do in terms of consolidating my JavaScript and CSS files into one of each and then also minimising my JavaScript file. One of the things that Marcus brought to my attention was that my script sources should not be loaded in the header of my index.html and that this was bad practice. They now reside under the footer, but this presented some new challenges. For example the smoothScroll function had issues loading so I added a new main.js file (this is will become the final master js file) and added a window EventListener and then added an init function - to initialise SmoothScroll after the load is completed. The other issue is that Flickity Carousel for the timeline started to flash up momentarily as a column until it found it&amp;rsquo;s &lt;em&gt;brain&lt;/em&gt; (aka the script actually loaded). I actually only discovered this due to using my mobile broadband stick in a cafe and noticed the latency. The Flickity Carousel is currently initialized at the bottom of a unique flickity.js file&lt;fn&gt;I needed to keep the smoothScroll.js and flickity.js separated while I figured out how to get things working harmoniously.&lt;/fn&gt;. What I needed to do to solve this was to set the carousel opacity as 0 until the window has loaded and as the carousel is not a function in the same way as smoothScroll it was a bit trickier for me; there wasn&amp;rsquo;t something straightforward for me to work with. What I ended up doing was adding a new variable for carousel immediately after initialising flickity (entails designating the css selector as a flickity carousel) and then applying a style to make the opacity 1&lt;fn&gt;I had to consult github for help with this as I was at a loss for a bit: &lt;a href=&#34;https://github.com/metafizzy/flickity/issues/269&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/metafizzy/flickity/issues/269&lt;/a&gt;.&lt;/fn&gt;. This is working nicely, however the delay or a white screen may be improved by a momentary loading GIF in order to explain what is going on for a slower connection - one to add to the to do list! I quite like the Buffer GIF animation and this helpful tutorial explains how to code something like this with an SVG file as opposed to GIF, I&amp;rsquo;ll give it a go: &lt;a href=&#34;https://cssanimation.rocks/buffer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://cssanimation.rocks/buffer/&lt;/a&gt;. Also due to the audience of this site, I think that it is important to include the word &amp;ldquo;Loading&amp;rdquo; alongside any GIF or animated SVG. As part of the process above I added the cellSelector option to the carousel in JSON format, as initially I thought that I might want an EventListener. It seems that this might be useful later on, so I have left it in place for now. e.g. &lt;code&gt;data-flickity=&#39;{ &amp;quot;cellSelector&amp;quot;: &amp;quot;.carousel-cell&amp;quot;, &amp;quot;freeScroll&amp;quot;: true}&#39;&lt;/code&gt; Another issue was with the customised Flickity dots (used for timeline navigation) was that I had set the position of their container to &lt;em&gt;absolute&lt;/em&gt; and the overflow to &lt;em&gt;hidden&lt;/em&gt; as a solution for smaller screens or browser windows (the dots disappear entirely on a mobile phone sized screen). However, I noticed a sort of ghosting issue as a consequence of the overflow. &lt;/p&gt;
\[caption id=&#34;attachment\_245&#34; align=&#34;alignnone&#34; width=&#34;471&#34;\]&lt;p&gt;&lt;a href=&#34;http://fionamacneill.co.uk/blog/2016/12/11/cellular-concerns/ghostydots/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Screenshot of the dots with the ghosting overflow issue&#34; srcset=&#34;
               /post/2016/12/cellular-concerns/images/ghostydots_hu11926925531766237830.webp 400w,
               /post/2016/12/cellular-concerns/images/ghostydots_hu7126604143290240175.webp 760w,
               /post/2016/12/cellular-concerns/images/ghostydots_hu6826172663410602639.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/2016/12/cellular-concerns/images/ghostydots_hu11926925531766237830.webp&#34;
               width=&#34;471&#34;
               height=&#34;154&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt; It is quite subtle, but can you see those little grey lines between 2 and 3 and also between 3 and 4? There be the ghosties!&lt;/p&gt;
\[/caption\]&lt;p&gt; I fixed this by adding &amp;ldquo;white-space: nowrap;&amp;rdquo; to the dots themselves so that the wrapping was disabled. &lt;strong&gt;Result!&lt;/strong&gt; &lt;/p&gt;
\[caption id=&#34;attachment\_244&#34; align=&#34;alignnone&#34; width=&#34;453&#34;\]&lt;p&gt;&lt;a href=&#34;http://fionamacneill.co.uk/blog/2016/12/11/cellular-concerns/fixednonghostydots/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;flex justify-center	&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Screenshot showing the fixed dots&#34; srcset=&#34;
               /post/2016/12/cellular-concerns/images/fixednonghostydots_hu17954360989627063535.webp 400w,
               /post/2016/12/cellular-concerns/images/fixednonghostydots_hu8537454626979619053.webp 760w,
               /post/2016/12/cellular-concerns/images/fixednonghostydots_hu9396399131592382074.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/2016/12/cellular-concerns/images/fixednonghostydots_hu17954360989627063535.webp&#34;
               width=&#34;453&#34;
               height=&#34;149&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt; Yay, no more ghosties!&lt;/p&gt;
\[/caption\]&lt;h3 id=&#34;here-be-the-stuff-of-nightmares&#34;&gt;Here be the stuff of nightmares&amp;hellip;&lt;/h3&gt;
&lt;p&gt;I have to admit that I spent way too much time on this issue, but it was honestly driving me to distraction. So having fixed my grid so that it was had even widths and looked lovely as I started to use my grids I found that I needed to add unique classes for the blocks that appear in each &lt;section&gt; of the html file. The grid structure is left in place as a logical point of reference. Then I found that my written content in the grid was overflowing beyond the height of the sections. This was relatively easy to fix by setting the classes for the sections to have relative positions and have overflow set to auto. Phew. However, as I added some placeholder content to my grid blocks I found that the widths were still perfect but the heights of columns were not okay. What I mean by &amp;ldquo;not okay&amp;rdquo; is that if a block had more written content then it was longer to contain this content. Therefore blocks positioned adjacent to each other looked askew. &lt;code&gt;/* tried this and hated it .is-table-row { display: table; } .is-table-row [class*=&amp;quot;col-&amp;quot;] { float: none; display: table-cell; vertical-align: top; border: solid 7px #EEEEEE; border-radius: 0; } */&lt;/code&gt; This was strangely very hard to fix. I tried several methods. First I tried fool it into thinking it was a table, but I lost my gutter and I worried about responsive accessibility. I also tried CSS pseudo classes (which I now have a little bit of experience with after customising the dots), but it didn&amp;rsquo;t provide the desired look either. I also tried adding attributes to the section container and the &amp;ldquo;One True Layout Method&amp;rdquo; (Coyier, 2010) where the margin-bottom is set to -99999px and the padding-bottom is set to 99999px and the overflow is hidden. This feels like brushing the problem under the carpet and it looks like it too as it cut off the bottom of my block outline and I like the outline. In the end I used row class for my grid defined to display &lt;em&gt;flex&lt;/em&gt; and and then use the flex-wrap &lt;em&gt;wrap&lt;/em&gt; setting. Alas, with one fell swoop my dream of full functionality in Internet Explorer is dashed as Flexible Box Layout module is not supported in IE9 at all (&lt;a href=&#34;http://caniuse.com/#search=flex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://caniuse.com/#search=flex&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&#34;smoothscroll-and-the-navigation&#34;&gt;SmoothScroll and the Navigation&lt;/h3&gt;
&lt;p&gt;In an &lt;a href=&#34;http://fionamacneill.co.uk/blog/2016/12/04/moving-things-along/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;earlier journal entry&lt;/a&gt; I had cited this fixed navigation example on codepen (&lt;a href=&#34;http://codepen.io/anon/pen/QGQPmX&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://codepen.io/anon/pen/QGQPmX&lt;/a&gt;) as being close to what I would like for the navigation on my site, however I have also been devouring a book on web accessibility, &lt;em&gt;Inclusive Design Patterns Coding Accessibility Into Web Design&lt;/em&gt; and anything fixed in the CSS was identified as a no-no in the book (Pickering, 2016). I had also found that the fixed header height meant was causing issues with the distance of the smoothScroll function. I was able to fix this by checking their documentation and adding the labeling the header as &lt;em&gt;data-scroll-header&lt;/em&gt; and then specifying this in the initiation script. Previously I had defined a spacer div for this purpose, it didn&amp;rsquo;t work perfectly for the smoothScroll function, but it ended up being handy for defining white space between the timeline and the about area (in addition to the use of margin settings it was helpful to have something that was independent). In the end I didn&amp;rsquo;t need most of this work as due to the advice in Pickering&amp;rsquo;s book, I decided that the navigation header needed to have a relative position instead of being fixed.&lt;/p&gt;
&lt;h3 id=&#34;anxiety-levels&#34;&gt;Anxiety levels&lt;/h3&gt;
&lt;p&gt;As I mentioned at the beginning of this post, I wanted to give the carousel/timeline a long image that continued along the base of cells showing the anxiety levels of the fictional patient during the story (this was shown in &lt;a href=&#34;http://fionamacneill.co.uk/blog/2016/11/20/wireframes-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wireframe version 3&lt;/a&gt;). I started by testing with a .png image and as I anticipated it looked awful but I was most interested in getting the positioning setup correctly. The issue was that the image kept showing up above or in front of the text inside the description div. Also as the window was resized the image floated upward from its initial position. The only way that I could fix this was to use z-index and a fixed position for the image container (I already broke the rules about &lt;em&gt;fixed&lt;/em&gt; items - see above) and then added a unique style id called #anxiety to specify how my image was shown in the container (as a background image). Initially I thought that I might need to specify one strip of the image per cell in the Flickity, but they kept overlapping and having layering issues. The logical approach in the end is to have one very long SVG. I need to optimise the SVG prior to the final release of the site, but at the moment I am still adding to it in Adobe Illustrator as I need to finish writing the patient story prior to finalising the graphic. As this graphic only serves an aesthetic purpose I think it is alright that it is both fixed and defined as a background image (and therefore cannot have an alt tag applied for accessibility reasons).&lt;/p&gt;
&lt;h3 id=&#34;bios-section&#34;&gt;Bios section&lt;/h3&gt;
&lt;p&gt;I added box-shading to the photos - they needed a little something to differentiate them against the background. Once again this is not supported in IE9 although it is less critical than the flex-box issue outlined above.&lt;/p&gt;
&lt;h3 id=&#34;responsive-adjustments&#34;&gt;Responsive adjustments&lt;/h3&gt;
&lt;p&gt;I worked on the mobile phone break point for the media queries first. Specifically, &lt;code&gt;@media (max-width: 414px)&lt;/code&gt; I based this size on the Google Nexus 6P and the Apple iPhone 6 plus as although these are both phablet sized I certainly need the grid blocks to be shown in a single column at this size not in rows. In general I would like to steer clear of too many device specific breakpoints as it is better to think about the legibility of the design rather than get too obsessed this (an article by Justin Avery (2013) supports this view: &lt;a href=&#34;https://responsivedesign.is/articles/why-you-dont-need-device-specific-breakpoints&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://responsivedesign.is/articles/why-you-dont-need-device-specific-breakpoints&lt;/a&gt; - not everyone agrees on this). Also, I realise that I need to go through the code and consolidate my classes and ensure that my units are standardised as % and &lt;em&gt;em&lt;/em&gt; prior to doing too much work on this. So the rest of the styling and layout needs to be completed first, based on a desktop first mentality.&lt;/p&gt;
&lt;h3 id=&#34;thinking-about-the-patient&#34;&gt;Thinking about the patient&lt;/h3&gt;
&lt;p&gt;I found myself rethinking the fictional patient&amp;rsquo;s name, based on the ever helpful Wolfram Alpha. It seems that women named &lt;em&gt;Ruth&lt;/em&gt; are demographically older than the fictional patient should be (roughly 55-65yrs although I need more data on this - more on this in my next post). Although Wolfram Alpha is based on demographic information from the United States it is a good basic litmus test for this. Here is my comparison, &lt;em&gt;Carol&lt;/em&gt; may be a better name: &lt;a href=&#34;https://www.wolframalpha.com/input/?i=name&amp;#43;ruth&amp;#43;compared&amp;#43;to&amp;#43;carol&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.wolframalpha.com/input/?i=name+ruth+compared+to+carol&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;
&lt;p&gt;Avery, J. (2014, October 28). Why you don’t need device specific breakpoints. Retrieved December 11, 2016, from &lt;a href=&#34;https://css-tricks.com/almanac/properties/w/whitespace/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://responsivedesign.is/articles/why-you-dont-need-device-specific-breakpoints&lt;/a&gt; Background-repeat. (2016, December 3). Retrieved December 11, 2016, from &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat&lt;/a&gt; Background-size. (2016, December 3). Retrieved December 11, 2016, from &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/background-size&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/background-size&lt;/a&gt; Blender. (2016). Force a div to contain floated child divs. Retrieved 11 December 2016, from &lt;a href=&#34;http://stackoverflow.com/questions/11964696/force-a-div-to-contain-floated-child-divs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://stackoverflow.com/questions/11964696/force-a-div-to-contain-floated-child-divs&lt;/a&gt; Bos, B., Etemad, E. J., &amp;amp; Kemper, B. (2014, September 9). CSS backgrounds and borders module level 3. Retrieved December 11, 2016, from &lt;a href=&#34;https://www.w3.org/TR/css3-background/#box-shadow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.w3.org/TR/css3-background/#box-shadow&lt;/a&gt; Box-shadow. Retrieved December 11, 2016, from &lt;a href=&#34;http://tests.themasta.com/blogstuff/boxshadowdemo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://tests.themasta.com/blogstuff/boxshadowdemo.html&lt;/a&gt; Can I use&amp;hellip; Support tables for HTML5, CSS3, etc. (2016, October 23). Retrieved December 11, 2016, from &lt;a href=&#34;http://caniuse.com/#search=box-shadow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://caniuse.com/#search=box-shadow&lt;/a&gt; cferdinandi. (2016, December 11). Cferdinandi/smooth-scroll. Retrieved December 11, 2016, from &lt;a href=&#34;https://github.com/cferdinandi/smooth-scroll&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/cferdinandi/smooth-scroll&lt;/a&gt; Cope, S. (2011a, September 6). Z-index. Retrieved December 11, 2016, from &lt;a href=&#34;https://css-tricks.com/almanac/properties/z/z-index/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://css-tricks.com/almanac/properties/z/z-index/&lt;/a&gt; Cope, S. (2011b, September 6). White-space. Retrieved December 11, 2016, from &lt;a href=&#34;https://css-tricks.com/almanac/properties/w/whitespace/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://css-tricks.com/almanac/properties/w/whitespace/&lt;/a&gt; Coyier, C. (2010, October 8). Media queries for standard devices. Retrieved December 11, 2016, from &lt;a href=&#34;https://css-tricks.com/snippets/css/media-queries-for-standard-devices/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://css-tricks.com/snippets/css/media-queries-for-standard-devices/&lt;/a&gt; Danilo, A. Splash vector graphics on your responsive site. Retrieved December 11, 2016, from &lt;a href=&#34;https://www.html5rocks.com/en/tutorials/svg/mobile_fundamentals/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.html5rocks.com/en/tutorials/svg/mobile_fundamentals/&lt;/a&gt; Kraken.io image Optimizer. (2013). Retrieved December 11, 2016, from &lt;a href=&#34;https://kraken.io/web-interface&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://kraken.io/web-interface&lt;/a&gt; LePage, P. (2016, December 16). Responsive web design patterns. Retrieved December 16, 2016, from &lt;a href=&#34;https://developers.google.com/web/fundamentals/design-and-ui/responsive/patterns&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://developers.google.com/web/fundamentals/design-and-ui/responsive/patterns&lt;/a&gt; Lumsden, A. (2012, June 27). Getting started with Scalable vector graphics (SVG). Retrieved December 11, 2016, from &lt;a href=&#34;https://webdesign.tutsplus.com/articles/getting-started-with-scalable-vector-graphics-svg--webdesign-7515&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://webdesign.tutsplus.com/articles/getting-started-with-scalable-vector-graphics-svg&amp;ndash;webdesign-7515&lt;/a&gt; metafizzy. (2016). Callback when Flickity is initialized? · issue #269 · metafizzy/flickity. Retrieved December 11, 2016, from &lt;a href=&#34;https://github.com/metafizzy/flickity/issues/269&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/metafizzy/flickity/issues/269&lt;/a&gt; metafizzy. Options. Retrieved December 11, 2016, from &lt;a href=&#34;http://flickity.metafizzy.co/options.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://flickity.metafizzy.co/options.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pickering, H. (2016). &lt;em&gt;Inclusive design patterns&lt;/em&gt; (Kindle ed.). Freiburg, Germany: Smashing Magazine GmbH.&lt;/p&gt;
&lt;p&gt;Quick and simple image placeholders. Retrieved December 11, 2016 (UPDATED: May 5, 2019), from &lt;a href=&#34;https://placeholder.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://placeholder.com/&lt;/a&gt; Salloum, N. (2014, April 4). CSS equal height columns, Three different ways. Retrieved December 11, 2016, from &lt;a href=&#34;http://callmenick.com/post/css-equal-height-columns-three-different-ways&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://callmenick.com/post/css-equal-height-columns-three-different-ways&lt;/a&gt; van Gemert, V. (2013, March 1). Logical Breakpoints for your responsive design – smashing magazine. Retrieved December 12, 2016, from Design, &lt;a href=&#34;https://www.smashingmagazine.com/2013/03/logical-breakpoints-responsive-design/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.smashingmagazine.com/2013/03/logical-breakpoints-responsive-design/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
